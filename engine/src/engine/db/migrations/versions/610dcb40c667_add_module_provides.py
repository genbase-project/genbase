"""Add module  provides

Revision ID: 610dcb40c667
Revises: c004fa751982
Create Date: 2025-03-02 13:49:41.926199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '610dcb40c667'
down_revision: Union[str, None] = 'c004fa751982'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_module_provides_provider', table_name='module_provides')
    op.drop_index('idx_module_provides_receiver', table_name='module_provides')
    op.drop_index('idx_module_provides_resource', table_name='module_provides')
    op.drop_table('module_provides')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('module_provides',
    sa.Column('provider_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource_type', postgresql.ENUM('WORKSPACE', 'ACTION', name='providetype'), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['modules.module_id'], name='module_provides_provider_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['receiver_id'], ['modules.module_id'], name='module_provides_receiver_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('provider_id', 'receiver_id', 'resource_type', name='module_provides_pkey')
    )
    op.create_index('idx_module_provides_resource', 'module_provides', ['resource_type'], unique=False)
    op.create_index('idx_module_provides_receiver', 'module_provides', ['receiver_id'], unique=False)
    op.create_index('idx_module_provides_provider', 'module_provides', ['provider_id'], unique=False)
    # ### end Alembic commands ###
