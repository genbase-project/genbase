"""initial migration

Revision ID: 06e22ef64b61
Revises: 
Create Date: 2025-03-16 04:08:16.250260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '06e22ef64b61'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('profile', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('message_type', sa.String(), nullable=False),
    sa.Column('tool_calls', sa.JSON(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('tool_call_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('module_id', 'profile', 'timestamp', 'session_id')
    )
    op.create_table('modules',
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('module_name', sa.String(), nullable=True),
    sa.Column('kit_id', sa.String(), nullable=False),
    sa.Column('owner', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('env_vars', sa.JSON(), nullable=False),
    sa.Column('repo_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('module_id')
    )
    op.create_table('projects',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('agent_status',
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('stage', sa.Enum('INITIALIZE', 'MAINTAIN', 'REMOVE', name='agent_stage'), nullable=False),
    sa.Column('state', sa.Enum('STANDBY', 'EXECUTING', name='agent_state'), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('module_id')
    )
    op.create_table('module_provides',
    sa.Column('provider_id', sa.String(), nullable=False),
    sa.Column('receiver_id', sa.String(), nullable=False),
    sa.Column('resource_type', sa.Enum('WORKSPACE', 'ACTION', name='providetype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['receiver_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('provider_id', 'receiver_id', 'resource_type')
    )
    op.create_index('idx_module_provides_provider', 'module_provides', ['provider_id'], unique=False)
    op.create_index('idx_module_provides_receiver', 'module_provides', ['receiver_id'], unique=False)
    op.create_index('idx_module_provides_resource', 'module_provides', ['resource_type'], unique=False)
    op.create_table('module_relations',
    sa.Column('source_id', sa.String(), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('relation_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['modules.module_id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['modules.module_id'], ),
    sa.PrimaryKeyConstraint('source_id', 'target_id', 'relation_type', name='module_relations_pkey')
    )
    op.create_table('profile_status',
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('profile_type', sa.String(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('module_id', 'profile_type')
    )
    op.create_table('profile_stores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('profile', sa.String(), nullable=False),
    sa.Column('collection', sa.String(), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_module_mappings',
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'module_id')
    )
    op.create_table('vector_store_configs',
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('store_name', sa.String(), nullable=False),
    sa.Column('store_type', sa.Enum('CHROMA', 'PINECONE', 'QDRANT', 'WEAVIATE', 'PGVECTOR', 'ELASTICSEARCH', 'OPENSEARCH', name='storetype'), nullable=False),
    sa.Column('embedding_dim', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('module_id', 'store_name')
    )
    op.create_table('work_manifests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('work_manifests')
    op.drop_table('vector_store_configs')
    op.drop_table('project_module_mappings')
    op.drop_table('profile_stores')
    op.drop_table('profile_status')
    op.drop_table('module_relations')
    op.drop_index('idx_module_provides_resource', table_name='module_provides')
    op.drop_index('idx_module_provides_receiver', table_name='module_provides')
    op.drop_index('idx_module_provides_provider', table_name='module_provides')
    op.drop_table('module_provides')
    op.drop_table('agent_status')
    op.drop_table('projects')
    op.drop_table('modules')
    op.drop_table('chat_history')
    # ### end Alembic commands ###
