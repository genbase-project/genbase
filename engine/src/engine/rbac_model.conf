# engine/rbac_model.conf

[request_definition]
# sub: subject (user requesting access)
# obj: object (resource being accessed)
# act: action (operation being performed)
r = sub, obj, act

[policy_definition]
# Defines the structure of a policy rule
# sub: role or user ID
# obj: resource identifier
# act: action allowed
p = sub, obj, act

[role_definition]
# Defines role hierarchy/grouping
# g = user, role  (User inherits Role)
g = _, _

[policy_effect]
# Defines how policy decisions are combined
# e = allow-override: if any matching policy allows, the result is allow.
e = some(where (p.eft == allow))

[matchers]
# Defines how requests are matched against policies
# Use keyMatch for object and action to support wildcard policies
m = g(r.sub, p.sub) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)
# Breakdown:
# g(r.sub, p.sub): Check if the requesting user (r.sub) has the role (p.sub) defined in the policy.
# keyMatch(r.obj, p.obj): Check if the requested resource object matches the object pattern in the policy (handles '*').
# keyMatch(r.act, p.act): Check if the requested action matches the action pattern in the policy (handles '*').
